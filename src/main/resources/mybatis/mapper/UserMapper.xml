<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.neo.entity.User">
    <id column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="company" jdbcType="VARCHAR" property="company" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.neo.entity.User">
    <result column="extend" jdbcType="LONGVARCHAR" property="extend" />
  </resultMap>
  <sql id="Base_Column_List">
    idcard, student_id, name, phone, password, address, company
  </sql>
  <sql id="Blob_Column_List">
    extend
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where idcard = #{idcard,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where idcard = #{idcard,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.neo.entity.User">
    insert into user (idcard, student_id, name, 
      phone, password, address, 
      company, extend)
    values (#{idcard,jdbcType=VARCHAR}, #{studentId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{extend,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neo.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idcard != null">
        idcard,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="extend != null">
        extend,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="extend != null">
        #{extend,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neo.entity.User">
    update user
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="extend != null">
        extend = #{extend,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where idcard = #{idcard,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.neo.entity.User">
    update user
    set student_id = #{studentId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      extend = #{extend,jdbcType=LONGVARCHAR}
    where idcard = #{idcard,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neo.entity.User">
    update user
    set student_id = #{studentId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR}
    where idcard = #{idcard,jdbcType=VARCHAR}
  </update>

  <select id="getUserCount" resultType="java.lang.Long">
    select count(*) from user
  </select>

  <select id="getUserByIdCards" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from user where idcard in
    <foreach collection="list" item="idCard" open="(" close=")" separator=",">
      #{idCard}
    </foreach>
  </select>
</mapper>